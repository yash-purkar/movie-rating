// 1st define store
import { configureStore } from "@reduxjs/toolkit";

export const store = configureStore({
    reducer:{}
});

// type for useSelector hook
export type RootState = ReturnType<typeof store.getState>

// type for dispatch hook
export type AppDispatch = typeof store.dispatch;



2. Create custom hooks to use throught the app
import { useDispatch, useSelector } from "react-redux";
import type { TypedUseSelectorHook } from "react-redux";
import { RootState, AppDispatch } from "./store";

// Use this throught the app rather than using useDispatch and useSelector.
export const useAppDispatch: () => AppDispatch = useDispatch;

export const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;



For search filter-
Created the another slice for search,
bcz we the search bar is in navbar and we want the search value in movieListing so we used the search query state there in movieListing, and filtered there.
Redux will not re-render all the app, it will only re-render that components which are using that searchquery state, And the movieListing will be re-rendered only, bcz we are only using there.
Update - 
Update searcSlice to filtersSlice to handle all dropdown filters as well.
For filter persistent on tab change.